name: Upload Python Package

on:
  release:
    types:
    - created

jobs:
  publish:
    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        python: 
        - "3.11"
        - "3.12"
        - "3.13"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}

    - name: Install Dependencies (Linux) # OpenMPI preinstalled on darwin
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        set -eux
        sudo apt-get update
        sudo apt install libmpich12 libmpich-dev build-essential ca-certificates

    - name: Create venv and install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m venv .venv
        source .venv/bin/activate
        set -eux
        python -m pip install build twine conda-build anaconda-cli
        python -m pip install -e .

    - name: Build (PyPI)
      run: |
        source .venv/bin/activate
        set -eux
        python -m build .[dev]

    - name: Publish (PyPI)
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        source .venv/bin/activate
        set -eux
        twine upload dist/* --verbose

    - name: Build (Conda)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        source .venv/bin/activate
        set -eux
        ./gen_meta.py
        conda-build .
    
    - name: Publish (Conda)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run:
        anaconda login --username $CONDA_USERNAME --password $CONDA_PASSWORD
        anaconda upload --user $CONDA_USERNAME $(conda-build . --output) --skip-existing
      env:
        CONDA_USERNAME: ${{ secrets.CONDA_USERNAME }}
        CONDA_PASSWORD: ${{ secrets.CONDA_PASSWORD }}
