# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.0

workflows:
  version: 2
  test:
    jobs:
      runs-on: ${{ matrix.os }}

        matrix:
          os:
            - ubuntu-latest

          python-version:
            - "3.10"
  
    steps:
    - uses: actions/checkout@v4

    - name: Set up conda environment
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yaml
        create-args: >-
          python=${{ matrix.python-version }}

    - name: Install package
      run: |
        python -m pip install -e .
    
    - name: Environment Information
      run: |
        micromamba info
        micromamba list

    - name: Run non-MPI tests
      run: |
        pytest -m 'not mpi'

    - name: Install MPI
      command: |
        export PATH=/opt/python/bin:$PATH
        pip3 install --user mpi4py

    - name: Run MPI tests
      run: |
        mpirun -n 2 python -m pytest -m 'mpi' --with-mpi

      
# test-template-pip: &test-template-pip
#   docker:
#     - image: ubuntu:22.04
#   steps:
#     - checkout
#     - run:
#         name: Install System Dependencies
#         command: |
#           sudo apt-get update
#           sudo apt-get install -y ca-certificates libmpich12 libmpich-dev build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget tar g++ libbz2-dev libhdf5-dev

#     # Download and cache dependencies
#     #- restore_cache:
#         #keys:
#           #- v1-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}

#     - run:
#         name: Install numpy, cython, mdtraj
#         command: |
#           export PATH=/opt/python/bin:$PATH
#           pip3 install --user --progress-bar off numpy==$NUMPY_VERSION cython==$CYTHON_VERSION
#           pip3 install --user --progress-bar off --no-use-pep517 mdtraj
#           pip3 install --user --progress-bar off pytest
#           python3 --version
#           python3 -c "import numpy; print('numpy', numpy.__version__)"
#           pip3 freeze | grep mdtraj
#     - run:
#         name: Install and build enspara
#         command: |
#           export PATH=/opt/python/bin:$PATH
#           pip3 install --user --progress-bar off .[dev]
#           python3 setup.py build_ext --inplace
#           python3 setup.py install --user 

#     #- save_cache:
#         #paths:
#           #- ~/miniconda
#         #key: v1-dependencies-{{ checksum "setup.py" }}

#     - run:
#         name: Run non-MPI tests
#         command: |
#           export PATH=/opt/python/bin:$PATH
#           pytest -m 'not mpi' enspara
          
#     - run:
#         name: Install mpi4py
#         command: |
#           export PATH=/opt/python/bin:$PATH
#           pip3 install --user mpi4py

#     - run:
#         name: Run MPI tests
#         command: |
#           export PATH=/opt/python/bin:$PATH
#           OMP_NUM_THREADS=1 mpiexec -n 2 pytest -m 'mpi'

#     - store_artifacts:
#         path: test-reports
#         destination: test-reports
     
# test-template-conda: &test-template-anaconda
#   docker:
#     - image: cimg/base
#   steps:
#     - checkout
#     - run:
#         name: Install System Dependencies
#         command: |
#           apt-get update
#           apt-get install -y libmpich12 libmpich-dev build-essential ca-certificates 

#     # Download and cache dependencies
#     - restore_cache:
#         keys:
#           - v1-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}

#     - run:
#         name: install anaconda
#         command: |
#           apt update
#           apt install -y wget
#           cd $HOME
#           wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
#           chmod +x ~/miniconda.sh && bash ~/miniconda.sh -b -p $HOME/miniconda
#           export PATH=$HOME/miniconda/bin:$PATH
            
#     - run:
#         name: Install numpy, cython, mdtraj
#         command: |
#           export PATH="$HOME/miniconda/bin:$PATH"
#           conda update  --yes conda
#           echo $PYTHON_VERSION
#           conda create -n myenv python=$PYTHON_VERSION -c conda-forge
#           source activate myenv
#           conda install --yes pip
#           conda install --yes -c conda-forge numpy=$NUMPY_VERSION cython=$CYTHON_VERSION
#           conda install --yes -c conda-forge pytest mdtraj  
#           python --version
#           python -c "import numpy; print(numpy.__version__)"

#     - run:
#         name: Install and build enspara
#         command: |
#           export PATH=$HOME/miniconda/bin:$PATH
#           source activate myenv
#           pip install --progress-bar off .[dev]
#           python setup.py build_ext --inplace
#           python setup.py install

#     - save_cache:
#         paths:
#           - ~/miniconda
#         key: v1-dependencies-{{ checksum "setup.py" }}

#     - run:
#         name: Run non-MPI tests
#         command: |
#           export PATH=$HOME/miniconda/bin:$PATH
#           source activate myenv
#           pytest -m 'not mpi' enspara
          
#     - run:
#         name: Install mpi4py
#         command: |
#           export PATH=$HOME/miniconda/bin:$PATH
#           source activate myenv
#           pip install --progress-bar off mpi4py
#     - run:
#         name: Run MPI tests
#         command: |
#           export PATH=$HOME/miniconda/bin:$PATH
#           source activate myenv
#           OMP_NUM_THREADS=1 mpiexec -n 2 pytest -m 'mpi'

#     - store_artifacts:
#         path: test-reports
#         destination: test-reports

# jobs:
#   conda-py3.9-np1.21:
#      <<: *test-template-anaconda
#      environment:
#        NUMPY_VERSION: 1.21
#        CYTHON_VERSION: 3.0
#        PYTHON_VERSION: 3.9
#   conda-py3.9-np1.22:
#      <<: *test-template-anaconda
#      environment:
#        NUMPY_VERSION: 1.22
#        CYTHON_VERSION: 3.0
#        PYTHON_VERSION: 3.9
#   conda-py3.9-np1.23:
#      <<: *test-template-anaconda
#      environment:
#        NUMPY_VERSION: 1.23
#        CYTHON_VERSION: 3.0
#        PYTHON_VERSION: 3.9
#   conda-py3.9-np1.24:
#      <<: *test-template-anaconda
#      environment:
#        NUMPY_VERSION: 1.24
#        CYTHON_VERSION: 3.0
#        PYTHON_VERSION: 3.9
#   conda-py3.9-np1.25:
#      <<: *test-template-anaconda
#      environment:
#        NUMPY_VERSION: 1.25
#        CYTHON_VERSION: 3.0
#        PYTHON_VERSION: 3.9 
#   conda-py3.10-np1.26:
#      <<: *test-template-anaconda
#      environment:
#        NUMPY_VERSION: 1.26
#        CYTHON_VERSION: 3.0
#        PYTHON_VERSION: 3.10
#   conda-py3.11-np1.26:
#      <<: *test-template-anaconda
#      environment:
#        NUMPY_VERSION: 1.26
#        CYTHON_VERSION: 3.0
#        PYTHON_VERSION: 3.11

#   # pip-py3.9-np1.20:
#   #   <<: *test-template-pip
#   #   docker:
#   #     - image: circleci/python:3.7.5-buster
#   #   environment:
#   #     NUMPY_VERSION: 1.20
#   #     CYTHON_VERSION: 3.0
#   #     PYTHON_VERSION: 3.9  

#   pip-py3.9-np1.20:
#     <<: *test-template-pip
#     docker:
#       - image: cimg/python:3.9
#     environment:
#       NUMPY_VERSION: 1.20.0
#       CYTHON_VERSION: 3.0
#       PYTHON_VERSION: 3.9
